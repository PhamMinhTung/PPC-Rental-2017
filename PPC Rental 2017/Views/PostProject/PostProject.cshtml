@using PPC_Rental_2017.Models;
@model PPC_Rental_2017.Models.PROPERTY
@{
    ViewBag.Title = "PostPr";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new team15Entities();
}

<h2>Form Post Project</h2>


@using (Html.BeginForm("Create", "PostProject", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PROPERTY</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PropertyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PropertyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Select Avatar: <input type="file" name="Avatar" />


                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
            </div>
            <p></p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <form action="/action_page.php">
                    Select images: <input type="file" name="Image" multiple>
                </form>
                @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PROPERTY_TYPE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PropertyType_ID,
                new SelectList(db.PROPERTY_TYPE, "ID", "CodeType"), "Choose...", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <input class="form-control" type="text" placeholder="VND" disabled />
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BedRoom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BedRoom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BedRoom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BathRoom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BathRoom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BathRoom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackingPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackingPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PackingPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.STREET, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Street_ID,
                new SelectList(db.STREETs, "ID", "StreetName"), "Choose Ward...", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WARD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Ward_ID,
                new SelectList(db.WARDs, "ID", "WardName"), "Choose Ward...", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DISTRICT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.District_ID,
                new SelectList(db.DISTRICTs, "ID", "DistrictName"), "Choose District...", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.PROPERTY_FEATURE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @foreach (var item in db.FEATUREs)
                {
                        <div class="input-group col-md-3" style="margin:7px;padding : 0; margin-left:20px;">
                            <span class="input-group-addon">@item.FeatureName </span>
                            <input style="margin-left: 4em;" value="@item.ID" type="checkbox" name="featuresall" class="form-control-radio" />
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <div><a class=" btn btn-default" href="~/ViewListofProject/Unapproved" style="color:gray">Thoát</a></div>
            <div class="col-md-10">

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<form action="~/ViewListofProject/Unapproved" method="post">
                        Lựa chọn trạng thái bạn muốn đăng bài :
                        <select id="mySelect" name="mySelect" onchange="this.form.submit()">
                            <option value="chưa duyệt">Đăng bài </option>
                            <option value="lưu nháp">Lưu Nháp</option>
                        </select>
                    </form>
                    @*<div><button type="submit">Submit</button></div>*@
                @*<p id="petter"></p>
                    <script>
                        function myFunction() {
                            var x = document.getElementById("mySelect").value;
                            document.getElementById("petter").innerHTML = x;
                        }
                    </script>*@
                <!--<select type="submit">
                    <option value="Đăng Bài" class="btn btn-default">Đăng Bài</option>
                    <option value="Lưu Nháp" class="btn btn-default">Lưu Nháp</option>
                </select>-->
                <!--<input type="submit" onclick="alert('Chúc mừng bạn đăng bài thành công!')" value="Chưa Duyệt">-->

                <input style="visibility:hidden" type="text" name="viewlist" id="ViList" />
                <button class="btn-nut-1" type="submit" id="1">Chưa duyệt</button>
                <button class="btn-nut-2" id="2" type="submit">Lưu nháp</button>
                <script>

                    var btn1 = document.getElementById('1');
                    btn1.addEventListener("click", cd);
                    function cd() {
                        var viewlist = document.getElementById('ViList');
                        viewlist.setAttribute("value", "1");
                        console.log("complete1");
                    }
                    var btn2 = document.getElementById('2');
                    btn2.addEventListener("click", ln);
                    function ln() {
                        var viewlist = document.getElementById('ViList');
                        viewlist.setAttribute("value", "2");
                        console.log("complete2");
                    }
                </script>

                @**@

                @*@{ string re = "";}
                            <button id="a" onclick="y()" type="submit" value="1">Yes</button>
                            <button id="b" onclick="n()" type="submit" value="2">No</button>
                            <script type="text/javascript">

                    function y()
                    {
                        @re = (document.getElementById('a').value);

                        @Html.Hidden("petter", re);


                        }
                        function n()
                        {
                            @result = document.getElementById('b').value;
                            @Html.Hidden("petter", result);
                                }


                            </script>*@
            </div>
        </div>
    </div>
}
<script>
    var p = document.getElementById('1');
    p.addEventListener("click", meo);
    function meo() {
        @ViewBag.petter=1;
    }

    var w = document.getElementById('2');
    p.addEventListener("click", meo2);
    function meo2() {
        @ViewBag.petter=2;
    }
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @*$('#button1').click(function(){
        $('#1').attr('action', 'Unapproved');
        });


        $('#button2').click(function(){
        $('#2').attr('action', 'SaveDrafts');
        });*@

}


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



